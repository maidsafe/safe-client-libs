#!/bin/bash

# This script is a wrapper for running the tests in the context of a container.
#
# It'll be passed as an argument to a docker run command. The intended usage is
# with artifacts that have already been built at an earlier stage. Before the
# container is started, the artifacts to be tested will be placed in an 'artifacts'
# directory at the root of this repository, which will then be mounted into the
# container at /usr/src/safe_client_libs. We then copy those artifacts into
# /target/release.
#
# I initially tried to do the copy as part of the docker run command, like so:
# docker run <snip> find artifacts <snip> && scripts/test-mock
#
# The problem is, anything after the && actually runs on the host and not inside the
# container, hence the reason for the script.

set -e -x

if [[ ! -d "artifacts" ]]; then
    echo \
    "This script is intended to be used with a docker container and a set of pre-built artifacts. " \
    "Please place these artifacts in an 'artifacts' folder at the root of the repository " \
    "and perform the 'docker run' command again."
    exit 1
fi

find artifacts -maxdepth 1 -type f -exec cp '{}' /target/release \;

source ./scripts/test-mock
