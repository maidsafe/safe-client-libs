env:
  global:
    - Features="use-mock-routing testing"
    - RUST_BACKTRACE=1
    - PATH=$PATH:$HOME/.cargo/bin
os:
  - linux
  - osx
language: rust
rust:
  - 1.17.0
  - nightly-2017-04-28
sudo: false
branches:
  only:
    - master
    - dev
cache:
  cargo: true

before_script:
  - curl -sSL https://github.com/maidsafe/QA/raw/master/travis/cargo_install.sh > cargo_install.sh
  - bash cargo_install.sh cargo-prune;
  - if [ "${TRAVIS_RUST_VERSION}" = 1.17.0 ]; then
      bash cargo_install.sh rustfmt 0.8.3;
    elif [ "${TRAVIS_OS_NAME}" = linux ]; then
      bash cargo_install.sh clippy 0.0.128;
    fi
script:
  - if [ "${TRAVIS_RUST_VERSION}" = 1.17.0 ]; then
        (
            set -x;
            echo "--- Check format ---" &&
            cd ffi_utils &&
            cargo fmt -- --write-mode=diff &&
            cd ../safe_core &&
            cargo fmt -- --write-mode=diff &&
            cd ../safe_app &&
            cargo fmt -- --write-mode=diff &&
            cd ../safe_authenticator &&
            cargo fmt -- --write-mode=diff &&
            echo "--- Test ffi_utils ---" &&
            cd ../ffi_utils &&
            cargo test  --verbose --release &&
            echo "--- Check compilation against actual routing ---" &&
            cd ../safe_core &&
            cargo rustc --verbose --release &&
            cargo rustc --verbose --features testing --release --profile test --lib -- -Zno-trans &&
            cd ../safe_app &&
            cargo rustc --verbose --features testing --release --profile test --lib -- -Zno-trans &&
            cd ../safe_authenticator &&
            cargo rustc --verbose --features testing --release --profile test --lib -- -Zno-trans &&
            echo "--- Test against mock ---" &&
            cd ../safe_core &&
            cargo test --verbose --release --features "$Features" &&
            cd ../safe_app &&
            cargo test --verbose --release --features "$Features" &&
            cd ../safe_authenticator &&
            cargo test --verbose --release --features "$Features";
        );
    elif [ "${TRAVIS_OS_NAME}" = linux ]; then
        (
            set -x;
            cd ffi_utils && unset Features && cargo clippy && cargo clippy --profile=test && export Features="use-mock-routing testing" &&
            cd ../safe_core && cargo clippy && cargo clippy --profile=test --features="$Features" &&
            cd ../safe_app && cargo clippy --profile=test --features="$Features" &&
            cd ../safe_authenticator && cargo clippy --profile=test --features="$Features";
        )
    fi
before_cache:
  - cargo prune
