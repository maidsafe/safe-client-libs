env:
  global:
    - Features="use-mock-routing testing"
    - RUST_BACKTRACE=1
    - PATH=$PATH:$HOME/.cargo/bin
os:
  - linux
  - osx
language: rust
rust:
  - stable
  - nightly-2017-03-16
sudo: false
branches:
  only:
    - master
    - dev
cache:
  cargo: true

before_script:
  - (which cargo-install-update && cargo install-update cargo-update) || cargo install cargo-update
  - (which cargo-prune && cargo install-update cargo-prune) || cargo install cargo-prune
  - if [ "${TRAVIS_RUST_VERSION}" = stable ]; then
      (which rustfmt && cargo install-update rustfmt) || cargo install rustfmt;
    elif [ "${TRAVIS_OS_NAME}" = linux ]; then
      clippy_vers=0.0.120;
      if ! cargo clippy --version | grep -q $clippy_vers; then
        cargo install clippy --vers=$clippy_vers --force;
      fi
    fi
script:
  - if [ "${TRAVIS_RUST_VERSION}" = stable ]; then
        (
            set -x;
            echo "--- Check format ---" &&
            cd ffi_utils &&
            cargo fmt -- --write-mode=diff &&
            cd ../safe_core &&
            cargo fmt -- --write-mode=diff &&
            cd ../safe_app &&
            cargo fmt -- --write-mode=diff &&
            cd ../safe_authenticator &&
            cargo fmt -- --write-mode=diff &&
            echo "--- Test ffi_utils ---" &&
            cd ../ffi_utils &&
            cargo test  --verbose --release &&
            echo "--- Check compilation against actual routing ---" &&
            cd ../safe_core &&
            cargo rustc --verbose --release &&
            cargo rustc --verbose --features testing --release --profile test --lib -- -Zno-trans &&
            cd ../safe_app &&
            cargo rustc --verbose --features testing --release --profile test --lib -- -Zno-trans &&
            cd ../safe_authenticator &&
            cargo rustc --verbose --features testing --release --profile test --lib -- -Zno-trans &&
            echo "--- Test against mock ---" &&
            cd ../safe_core &&
            cargo test --verbose --release --features "$Features" &&
            cd ../safe_app &&
            cargo test --verbose --release --features "$Features" &&
            cd ../safe_authenticator &&
            cargo test --verbose --release --features "$Features";
        );
    elif [ "${TRAVIS_OS_NAME}" = linux ]; then
        (
            set -x;
            cd ffi_utils && unset Features && cargo clippy && cargo clippy --profile=test && export Features="use-mock-routing testing" &&
            cd ../safe_core && cargo clippy && cargo clippy --profile=test --features="$Features" &&
            cd ../safe_app && cargo clippy --profile=test --features="$Features" &&
            cd ../safe_authenticator && cargo clippy --profile=test --features="$Features";
        )
    fi
before_cache:
  - cargo prune
